@page "/MealsCategories"
@using ErpDashboard.Client.Infrastructure.Managers.MealsCategories
@using ErpDashboard.Application.Features.MealsCategory.Queries.Dto
@inject IMealsCategoriesManager _MealsCategoryManager

<MudTable Items="@mealCategoryResponses" Hover="true" Breakpoint="Breakpoint.Sm">
	<ColGroup>
		<col style="width:300px;" />
		<col style="width:100px;" />
		<col />
		<col style="width:100px;" />
	</ColGroup>
	<HeaderContent>
		<MudTh></MudTh>
		<MudTh>Name</MudTh>
		<MudTh>Symbol</MudTh>
		<MudTh>Issnack</MudTh>
	</HeaderContent>
	<RowTemplate>
		<MudTd><MudIconButton  Icon= "@Icons.Material.Filled.Add" 
		OnClick="@(() => ShowBtnPress())"> Types Details</MudIconButton></MudTd>
		<MudTd DataLabel="Name">@context.EnName</MudTd>
		<MudTd DataLabel="Symbol">@context.Symbol</MudTd>
		<MudTd DataLabel="Issnack">@context.IsSnack</MudTd>

	</RowTemplate>
	<ChildRowContent>
		@if(IconImageChange)
		{

			<MudTr>
				<td colspan="4">
					@*<MudCard Elevation="0">
						<MudCardHeader>
							<CardHeaderContent>
								<MudText Typo="Typo.body1">Address Details for <strong>@context.EnName</strong></MudText>
							</CardHeaderContent>
						</MudCardHeader>
						<MudCardContent Class="pa-0">
							<MudTable Items="@context.tbMealsTypes" Context="AddressContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
								<ColGroup>
									<col />
									<col />
									<col style="width:200px;" />
								</ColGroup>
								<HeaderContent>
									<MudTh>Type Name</MudTh>
								</HeaderContent>
								<RowTemplate>
									<MudTd DataLabel="Address Line 1">@AddressContext.Name</MudTd>
								</RowTemplate>
							</MudTable>
						</MudCardContent>
					</MudCard>*@
					@foreach (var item in context.tbMealsTypes)
					{
						<MudChip Variant="Variant.Outlined" Color="Color.Info">@item.Name</MudChip>
					}
				</td>
			</MudTr>
		}

	</ChildRowContent>
</MudTable>




@code {

	public List<GetMealCategoryResponse> mealCategoryResponses { get; set; }
	public bool IconImageChange = false ; // add  

	protected override async void OnInitialized()
	{
		await GetMealsCategoriesData();
	}

	async Task GetMealsCategoriesData()
	{
		var response = await _MealsCategoryManager.GetAllAsync();
		if (response.Succeeded)
		{
			mealCategoryResponses = response.Data;
			StateHasChanged();
		}
		else
		{
			foreach(var msg in response.Messages)
			{
				_snackBar.Add(msg, Severity.Error);
			} 
		}
	}
	private void ShowBtnPress()
	{
		if (IconImageChange)
		{
			IconImageChange = false;
		}
		else
		{
			IconImageChange = true;
		}
	}
}

}
