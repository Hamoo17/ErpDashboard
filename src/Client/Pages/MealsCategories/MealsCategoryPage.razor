@page "/MealsCategories"
@using ErpDashboard.Client.Infrastructure.Managers.MealsCategories
@using ErpDashboard.Application.Features.MealsCategory.Queries.Dto
@inject IMealsCategoriesManager _MealsCategoryManager

<MudTable Items="@mealCategoryResponses" Hover="true" Breakpoint="Breakpoint.Sm">
	<ColGroup>
		<col style="width:300px;" />
		<col style="width:100px;" />
		<col />
		<col style="width:100px;" />
	</ColGroup>
	<HeaderContent>
		<MudTh></MudTh>
		<MudTh>Nr</MudTh>
		<MudTh>Name</MudTh>
		<MudTh>Age</MudTh>
	</HeaderContent>
	<RowTemplate>
		<MudTd><MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => ShowBtnPress(context.Id))">@((true)? "Hide" : "Show") Types Details</MudButton></MudTd>
		<MudTd DataLabel="Nr">@context.EnName</MudTd>
		<MudTd DataLabel="Name">@context.Symbol</MudTd>
		<MudTd DataLabel="Age">@context.IsSnack</MudTd>
	</RowTemplate>
	<ChildRowContent>
		@if (true)
				{
@*  <MudTr>
   <td colspan="4">
	<MudCard Elevation="0">
	 <MudCardHeader>
	  <CardHeaderContent>
	   <MudText Typo="Typo.body1">Address Details for <strong>@context.EnName</strong></MudText>
	  </CardHeaderContent>
	 </MudCardHeader>
	 <MudCardContent Class="pa-0">
	  <MudTable Items="@context.tbMealsTypes" Context="AddressContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
	   <ColGroup>
		<col />
		<col />
		<col style="width:200px;" />
	   </ColGroup>
	   <HeaderContent>
		<MudTh>Type Name</MudTh>
	   </HeaderContent>
	   <RowTemplate>
		<MudTd DataLabel="Address Line 1">@AddressContext.Name</MudTd>
	   </RowTemplate>
	  </MudTable>
	 </MudCardContent>
	</MudCard>
   </td>
  </MudTr>*@
		}
	</ChildRowContent>
</MudTable>




@code {

    public List<GetMealCategoryResponse> mealCategoryResponses { get; set; }

    protected override async void OnInitialized()
    {
        await GetMealsCategoriesData();
    }

    async Task GetMealsCategoriesData()
    {
        var response = await _MealsCategoryManager.GetAllAsync();
        if (response.Succeeded)
        {
            mealCategoryResponses = response.Data;
            StateHasChanged();
        }
        else
        {
            foreach(var msg in response.Messages)
            {
                _snackBar.Add(msg, Severity.Error);
            } 
        }
    }
		private void ShowBtnPress(int nr)
	{
		//Person tmpPerson = People.First(f => f.Number == nr);
		//tmpPerson.ShowDetails = !tmpPerson.ShowDetails;
	}
}

}
