@page "/MealsCategories"
@using ErpDashboard.Client.Infrastructure.Managers.MealsCategories
@using ErpDashboard.Application.Features.MealsCategory.Queries.Dto
@inject IMealsCategoriesManager _MealsCategoryManager

<MudTable Hover="true" Breakpoint="Breakpoint.Sm" FixedHeader="true"
          Items="mealCategoryResponses"
          GroupBy="@_groupDefinition"
          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
          GroupFooterClass="mb-4"
          Dense="true">
    <ColGroup>
        <col style="width: 60px;" />
        <col />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
    </HeaderContent>
    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context.GroupName}: {context.Key}")</MudTh>
        <MudIconButton Icon="@Icons.Filled.EditNote">Edit</MudIconButton>
    </GroupHeaderTemplate>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudIconButton Icon="@Icons.Filled.EditNote">Edit</MudIconButton>
    </RowTemplate>

</MudTable>




@code {

	public List<MealsTypesResponse> mealCategoryResponses { get; set; }

	protected override async void OnInitialized()
	{
		await GetMealsCategoriesData();
	}

	async Task GetMealsCategoriesData()
	{
		var response = await _MealsCategoryManager.GetAllAsync();
		if (response.Succeeded)
		{
			mealCategoryResponses = response.Data;
			StateHasChanged();
		}
		else
		{
			foreach(var msg in response.Messages)
			{
				_snackBar.Add(msg, Severity.Error);
			} 
		}
	}
    private TableGroupDefinition<MealsTypesResponse> _groupDefinition = new()
    {
        GroupName = "CategoryName",
        Indentation = false,
        Expandable = true,
        IsInitiallyExpanded = false,
        Selector = (e) => e.CategoryName
    };

}


