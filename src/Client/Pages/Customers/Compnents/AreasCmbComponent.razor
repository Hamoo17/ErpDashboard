
@using ErpDashboard.Application.Features.Customer.Quers.GetAllAreas
@using ErpDashboard.Client.Infrastructure.Managers.Customers
@inject ICustomersManager _ICustomerManager
<MudSelect T="int" @bind-Value="MyValue" ToStringFunc="@converter()"  Label="Area" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
  @if (AreasList != null)
  {
	  foreach (var Area in AreasList)
	  {
		   <MudSelectItem Value="@Area.Id">@Area.Name</MudSelectItem>
	  }
  }
</MudSelect>

@code {
	private List<GetAllAreaViewModal> AreasList { get; set; }=new();
	Func<int, string> converter()
	{
		return x => AreasList.FirstOrDefault(c => c.Id == x).Name;
	}


	protected override async Task OnInitializedAsync()
	{
		await LoadData();
	}

	private async Task LoadData()
	{
		var response = await _ICustomerManager.GetAllAreasAsync();

		if (response.Succeeded)
		{
			AreasList = response.Data;
		}
		else
		{
			foreach (var msg in response.Messages)
			{
				_snackBar.Add(msg, Severity.Error);
			}

		}
	}


	private int _value;

	[Parameter]
	public int MyValue
	{
		get => _value;
		set
		{
			if (_value == value ) return;
			_value = value;
			MyValueChanged.InvokeAsync(value);
		}
	}

	[Parameter]
	public EventCallback<int> MyValueChanged { get; set; }
}
